name: CI/CD Pipeline with GitHub Container Registry

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #  Étape 1 : Vérification du code et tests
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name:  Cloner le repo
        uses: actions/checkout@v3

      - name:  Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name:  Installer les dépendances
        run: |
          pip install -r services/api_climatologique_producer/requirements.txt
          pip install -r services/api_observations_producer/requirements.txt
          pip install -r services/api_vigilance_producer/requirements.txt

      - name:  Linter le code
        run: |
          pip install flake8
          flake8 services/ || echo "Flake8 warnings"

      - name :  Installer 
        run :  |
          pip install pytest

      # - name:  Lancer les tests
      #   run: |
      #     pytest services/
      

    
      

  #  Étape 2 : Build et Push des images Docker vers GHCR
  
  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name:  Cloner le repo
        uses: actions/checkout@v3

      - name:  Connexion à GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name : Image repo
        run: echo "IMAGE_REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        
      - name: Build et Push Backend
      
        run: |
          docker build -t ghcr.io/$IMAGE_REPO/backend:latest services/backend
          docker push ghcr.io/$IMAGE_REPO/backend:latest

      - name:  Build et Push Frontend
        run: |
          docker build -t ghcr.io/$IMAGE_REPO/frontend:latest services/frontend
          docker push ghcr.io/$IMAGE_REPO/frontend:latest

      - name:  Build et Push Kafka Producers
        run: |
          docker build -t ghcr.io/$IMAGE_REPO/api-climatologique:latest services/api_climatologique_producer
          docker push ghcr.io/$IMAGE_REPO/api-climatologique:latest

          docker build -t ghcr.io/$IMAGE_REPO/api-observations:latest services/api_observations_producer
          docker push ghcr.io/$IMAGE_REPO/api-observations:latest

          docker build -t ghcr.io/$IMAGE_REPO/api-vigilance:latest services/api_vigilance_producer
          docker push ghcr.io/$IMAGE_REPO/api-vigilance:latest

  # #Étape 3 : Déploiement sur le serveur
  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name:  Cloner le repo
  #       uses: actions/checkout@v3

  #     - name:  Déploiement sur le serveur avec Docker Compose
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         script: |
  #           cd /path
  #           docker-compose pull
  #           docker-compose up -d
  #           docker system prune -f
